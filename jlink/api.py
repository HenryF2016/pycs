#! /usr/bin/python

class type_char_ptr:
  def __init__(self, name = None):
    self.name = name
  def emit_c(self):
    return 'char *'

class type_void:
  def __init(self):
    pass
  def emit_c(self):
    return 'void'

class func:
  def __init__(self, enable, name, ret_type, arg_list):
    self.enable = enable
    self.name = name
    self.ret_type = ret_type
    self.arg_list = arg_list

  def emit_c_proto(self):
    if self.enable:
      args = ''.join([x.emit_c() for x in self.arg_list])
      s = '%s%s(%s);' % (self.ret_type.emit_c(), self.name, args)
    else:
      s = '// %s' % self.name
    return s


#T138C 000:500 JLINKARM_GetHardwareVersion()  returns 0x13880 (0000ms, 0500ms total)
#T138C 000:500 JLINKARM_GetDLLVersion()  returns 41109 (0000ms, 0500ms total)
#T138C 000:500 JLINKARM_GetCompileDateTime() (0000ms, 0500ms total)
#T138C 000:501 JLINKARM_Reset()
#T138C 049:024 JLINKARM_Close() (0034ms, 0502ms total)

#T138C 000:385 JLINKARM_SetWarnOutHandler(...) (0000ms, 0385ms total)
#T138C 000:385 JLINKARM_OpenEx(...)
#T138C 000:499 JLINKARM_SetErrorOutHandler(...) (0000ms, 0499ms total)
#T138C 000:499 JLINKARM_TIF_Select(JLINKARM_TIF_JTAG)  returns 0x00 (0000ms, 0499ms total)
#T138C 000:499 JLINKARM_SetSpeed(2000) (0000ms, 0499ms total)
#T138C 000:500 JLINKARM_GetFirmwareString(...) (0000ms, 0500ms total)
#T138C 000:500 JLINKARM_GetFirmwareString(...) (0000ms, 0500ms total)
#T138C 000:500 JLINKARM_SetResetType(JLINKARM_RESET_TYPE_NORMAL)  returns JLINKARM_RESET_TYPE_NORMAL (0000ms, 0500ms total)
#T138C 000:502 JLINKARM_GetIdData(...) (0000ms, 0502ms total)


functions = [
  func(False, 'JLINK_AddMirrorArea', None, None),
  func(False, 'JLINK_AddMirrorAreaEx', None, None),
  func(False, 'JLINKARM_AddMirrorArea', None, None),
  func(False, 'JLINKARM_AddMirrorAreaEx', None, None),
  func(False, 'JLINKARM_BeginDownload', None, None),
  func(False, 'JLINKARM_BMI_Get', None, None),
  func(False, 'JLINKARM_BMI_Set', None, None),
  func(False, 'JLINKARM_CDC_Read', None, None),
  func(False, 'JLINKARM_CDC_SetBaudrate', None, None),
  func(False, 'JLINKARM_CDC_SetHookFuncs', None, None),
  func(False, 'JLINKARM_CDC_SetRTSState', None, None),
  func(False, 'JLINKARM_CDC_SetTimeoutLastCDCRead', None, None),
  func(False, 'JLINKARM_CDC_Write', None, None),
  func(False, 'JLINKARM_Clock', None, None),
  func(False, 'JLINKARM_Close', None, None),
  func(False, 'JLINKARM_ClrBP', None, None),
  func(False, 'JLINKARM_ClrBPEx', None, None),
  func(False, 'JLINKARM_ClrDataEvent', None, None),
  func(False, 'JLINKARM_ClrError', None, None),
  func(False, 'JLINKARM_ClrExecTime', None, None),
  func(False, 'JLINKARM_ClrRESET', None, None),
  func(False, 'JLINKARM_ClrTCK', None, None),
  func(False, 'JLINKARM_ClrTDI', None, None),
  func(False, 'JLINKARM_ClrTMS', None, None),
  func(False, 'JLINKARM_ClrTRST', None, None),
  func(False, 'JLINKARM_ClrWP', None, None),
  func(False, 'JLINKARM_Communicate', None, None),
  func(False, 'JLINKARM_CommunicateEx', None, None),
  func(False, 'JLINKARM_ConfigJTAG', None, None),
  func(False, 'JLINKARM_Connect', None, None),
  func(False, 'JLINKARM_Core2CoreName', None, None),
  func(False, 'JLINKARM_CORE_GetFound', None, None),
  func(False, 'JLINKARM_CORE_Select', None, None),
  func(False, 'JLINKARM_CORESIGHT_Configure', None, None),
  func(False, 'JLINKARM_CORESIGHT_ReadAPDPReg', None, None),
  func(False, 'JLINKARM_CORESIGHT_WriteAPDPReg', None, None),
  func(False, 'JLINKARM_CP15_IsPresent', None, None),
  func(False, 'JLINKARM_CP15_ReadEx', None, None),
  func(False, 'JLINKARM_CP15_ReadReg', None, None),
  func(False, 'JLINKARM_CP15_WriteEx', None, None),
  func(False, 'JLINKARM_CP15_WriteReg', None, None),
  func(False, 'JLINKARM_DEVICE_GetIndex', None, None),
  func(False, 'JLINKARM_DEVICE_GetInfo', None, None),
  func(False, 'JLINKARM_DEVICE_SelectDialog', None, None),
  func(False, 'JLINKARM_DisassembleInst', None, None),
  func(False, 'JLINKARM_DisassembleInstEx', None, None),
  func(False, 'JLINKARM_DownloadECode', None, None),
  func(False, 'JLINKARM_EMU_COM_IsSupported', None, None),
  func(False, 'JLINKARM_EMU_COM_Read', None, None),
  func(False, 'JLINKARM_EMU_COM_Write', None, None),
  func(False, 'JLINKARM_EMU_FILE_Delete', None, None),
  func(False, 'JLINKARM_EMU_FILE_GetList', None, None),
  func(False, 'JLINKARM_EMU_FILE_GetSize', None, None),
  func(False, 'JLINKARM_EMU_FILE_Read', None, None),
  func(False, 'JLINKARM_EMU_FILE_Write', None, None),
  func(False, 'JLINKARM_EMU_GetCounters', None, None),
  func(False, 'JLINKARM_EMU_GetDeviceInfo', None, None),
  func(False, 'JLINKARM_EMU_GetList', None, None),
  func(False, 'JLINKARM_EMU_GetMaxMemBlock', None, None),
  func(False, 'JLINKARM_EMU_GetNumConnections', None, None),
  func(False, 'JLINKARM_EMU_GetNumDevices', None, None),
  func(False, 'JLINKARM_EMU_GetProductId', None, None),
  func(False, 'JLINKARM_EMU_GetProductName', None, None),
  func(False, 'JLINKARM_EMU_HasCapEx', None, None),
  func(False, 'JLINKARM_EMU_HasCPUCap', None, None),
  func(False, 'JLINKARM_EMU_IsConnected', None, None),
  func(False, 'JLINKARM_EMU_SelectByIndex', None, None),
  func(False, 'JLINKARM_EMU_SelectByUSBSN', None, None),
  func(False, 'JLINKARM_EMU_SelectIP', None, None),
  func(False, 'JLINKARM_EMU_SelectIPBySN', None, None),
  func(False, 'JLINKARM_EMU_TestNRSpeed', None, None),
  func(False, 'JLINKARM_EMU_TestNWSpeed', None, None),
  func(False, 'JLINKARM_EnableCheckModeAfterWrite', None, None),
  func(False, 'JLINKARM_EnableFlashCache', None, None),
  func(False, 'JLINKARM_EnableLog', None, None),
  func(False, 'JLINKARM_EnableLogCom', None, None),
  func(False, 'JLINKARM_EnablePerformanceCnt', None, None),
  func(False, 'JLINKARM_EnableSoftBPs', None, None),
  func(False, 'JLINKARM_EndDownload', None, None),
  func(False, 'JLINKARM_ETB_IsPresent', None, None),
  func(False, 'JLINKARM_ETB_ReadReg', None, None),
  func(False, 'JLINKARM_ETB_WriteReg', None, None),
  func(False, 'JLINKARM_ETM_IsPresent', None, None),
  func(False, 'JLINKARM_ETM_ReadReg', None, None),
  func(False, 'JLINKARM_ETM_StartTrace', None, None),
  func(False, 'JLINKARM_ETM_WriteReg', None, None),
  func(False, 'JLINKARM_ExecCommand', None, None),
  func(False, 'JLINKARM_ExecECode', None, None),
  func(False, 'JLINKARM_FindBP', None, None),
  func(False, 'JLINKARM_FreeMem', None, None),
  func(False, 'JLINKARM_GetBPInfo', None, None),
  func(False, 'JLINKARM_GetBPInfoEx', None, None),
  func(True, 'JLINKARM_GetCompileDateTime', type_char_ptr(), [type_void(),]),
  func(False, 'JLINKARM_GetConfigData', None, None),
  func(False, 'JLINKARM_GetDebugInfo', None, None),
  func(False, 'JLINKARM_GetDeviceFamily', None, None),
  func(False, 'JLINKARM_GetDeviceId', None, None),
  func(True, 'JLINKARM_GetDLLVersion', type_char_ptr(), [type_void(),]),
  func(False, 'JLINKARM_GetEmbeddedFWString', None, None),
  func(False, 'JLINKARM_GetEmbeddedFWVersion', None, None),
  func(False, 'JLINKARM_GetEmuCaps', None, None),
  func(False, 'JLINKARM_GetEmuCapsEx', None, None),
  func(False, 'JLINKARM_GetExecTime', None, None),
  func(False, 'JLINKARM_GetFeatureString', None, None),
  func(False, 'JLINKARM_GetFirmwareString', None, None),
  func(False, 'JLINKARM_GetHardwareVersion', None, None),
  func(False, 'JLINKARM_GetHWInfo', None, None),
  func(False, 'JLINKARM_GetHWStatus', None, None),
  func(False, 'JLINKARM_GetId', None, None),
  func(False, 'JLINKARM_GetIdData', None, None),
  func(False, 'JLINKARM_GetIRLen', None, None),
  func(False, 'JLINKARM_GetMOEs', None, None),
  func(False, 'JLINKARM_GetNumBPs', None, None),
  func(False, 'JLINKARM_GetNumBPUnits', None, None),
  func(False, 'JLINKARM_GetNumWPs', None, None),
  func(False, 'JLINKARM_GetNumWPUnits', None, None),
  func(False, 'JLINKARM_GetOEMString', None, None),
  func(False, 'JLINKARM_GetPerformanceCnt', None, None),
  func(False, 'JLINKARM_GetpSharedMem', None, None),
  func(False, 'JLINKARM_GetRegisterList', None, None),
  func(False, 'JLINKARM_GetRegisterName', None, None),
  func(False, 'JLINKARM_GetResetTypeDesc', None, None),
  func(False, 'JLINKARM_GetScanLen', None, None),
  func(False, 'JLINKARM_GetSelDevice', None, None),
  func(False, 'JLINKARM_GetSN', None, None),
  func(False, 'JLINKARM_GetSpeed', None, None),
  func(False, 'JLINKARM_GetSpeedInfo', None, None),
  func(False, 'JLINKARM_GetU32', None, None),
  func(False, 'JLINKARM_GetWPInfoEx', None, None),
  func(False, 'JLINKARM_Go', None, None),
  func(False, 'JLINKARM_GoAllowSim', None, None),
  func(False, 'JLINKARM_GoEx', None, None),
  func(False, 'JLINKARM_GoHalt', None, None),
  func(False, 'JLINKARM_GoIntDis', None, None),
  func(False, 'JLINKARM_Halt', None, None),
  func(False, 'JLINKARM_HasError', None, None),
  func(False, 'JLINKARM_INDICATORS_SetState', None, None),
  func(False, 'JLINKARM_IsConnected', None, None),
  func(False, 'JLINKARM_IsHalted', None, None),
  func(False, 'JLINKARM_IsOpen', None, None),
  func(False, 'JLINKARM_JTAG_ConfigDevices', None, None),
  func(False, 'JLINKARM_JTAG_DisableIF', None, None),
  func(False, 'JLINKARM_JTAG_EnableIF', None, None),
  func(False, 'JLINKARM_JTAG_GetData', None, None),
  func(False, 'JLINKARM_JTAG_GetDeviceId', None, None),
  func(False, 'JLINKARM_JTAG_GetDeviceInfo', None, None),
  func(False, 'JLINKARM_JTAG_GetU16', None, None),
  func(False, 'JLINKARM_JTAG_GetU32', None, None),
  func(False, 'JLINKARM_JTAG_GetU8', None, None),
  func(False, 'JLINKARM_JTAG_StoreData', None, None),
  func(False, 'JLINKARM_JTAG_StoreGetData', None, None),
  func(False, 'JLINKARM_JTAG_StoreGetRaw', None, None),
  func(False, 'JLINKARM_JTAG_StoreInst', None, None),
  func(False, 'JLINKARM_JTAG_StoreRaw', None, None),
  func(False, 'JLINKARM_JTAG_SyncBits', None, None),
  func(False, 'JLINKARM_JTAG_SyncBytes', None, None),
  func(False, 'JLINKARM_JTAG_WriteData', None, None),
  func(False, 'JLINKARM_Lock', None, None),
  func(False, 'JLINKARM_MeasureCPUSpeed', None, None),
  func(False, 'JLINKARM_MeasureCPUSpeedEx', None, None),
  func(False, 'JLINKARM_MeasureRTCKReactTime', None, None),
  func(False, 'JLINKARM_MeasureSCLen', None, None),
  func(False, 'JLINKARM_NET_Close', None, None),
  func(False, 'JLINKARM_NET_Open', None, None),
  func(False, 'JLINKARM_Open', None, None),
  func(False, 'JLINKARM_OpenEx', None, None),
  func(False, 'JLINKARM_PCODE_Assemble', None, None),
  func(False, 'JLINKARM_PCODE_Exec', None, None),
  func(False, 'JLINKARM_PCODE_GetCaps', None, None),
  func(False, 'JLINKARM_PCODE_GetDebugAPI', None, None),
  func(False, 'JLINKARM_PCODE_GetS32Version', None, None),
  func(False, 'JLINKARM_PERIODIC_ConfReadMem', None, None),
  func(False, 'JLINKARM_PERIODIC_Control', None, None),
  func(False, 'JLINKARM_PERIODIC_Read', None, None),
  func(False, 'JLINKARM_RAWTRACE_Control', None, None),
  func(False, 'JLINKARM_RAWTRACE_Read', None, None),
  func(False, 'JLINKARM_ReadCodeMem', None, None),
  func(False, 'JLINKARM_ReadConfigReg', None, None),
  func(False, 'JLINKARM_ReadControlReg', None, None),
  func(False, 'JLINKARM_ReadDCC', None, None),
  func(False, 'JLINKARM_ReadDCCFast', None, None),
  func(False, 'JLINKARM_ReadDebugPort', None, None),
  func(False, 'JLINKARM_ReadDebugReg', None, None),
  func(False, 'JLINKARM_ReadEmu', None, None),
  func(False, 'JLINKARM_ReadEmuConfigMem', None, None),
  func(False, 'JLINKARM_ReadICEReg', None, None),
  func(False, 'JLINKARM_ReadMem', None, None),
  func(False, 'JLINKARM_ReadMemEx', None, None),
  func(False, 'JLINKARM_ReadMemHW', None, None),
  func(False, 'JLINKARM_ReadMemIndirect', None, None),
  func(False, 'JLINKARM_ReadMemU16', None, None),
  func(False, 'JLINKARM_ReadMemU32', None, None),
  func(False, 'JLINKARM_ReadMemU64', None, None),
  func(False, 'JLINKARM_ReadMemU8', None, None),
  func(False, 'JLINKARM_ReadReg', None, None),
  func(False, 'JLINKARM_ReadRegs', None, None),
  func(False, 'JLINKARM_ReadTerminal', None, None),
  func(False, 'JLINKARM_Reset', None, None),
  func(False, 'JLINKARM_ResetNoHalt', None, None),
  func(False, 'JLINKARM_ResetPullsRESET', None, None),
  func(False, 'JLINKARM_ResetPullsTRST', None, None),
  func(False, 'JLINKARM_ResetTRST', None, None),
  func(False, 'JLINKARM_SelDevice', None, None),
  func(False, 'JLINKARM_SelectDeviceFamily', None, None),
  func(False, 'JLINKARM_SelectIP', None, None),
  func(False, 'JLINKARM_SelectTraceSource', None, None),
  func(False, 'JLINKARM_SelectUSB', None, None),
  func(False, 'JLINKARM_SetBP', None, None),
  func(False, 'JLINKARM_SetBPEx', None, None),
  func(False, 'JLINKARM_SetCoreIndex', None, None),
  func(False, 'JLINKARM_SetDataEvent', None, None),
  func(False, 'JLINKARM_SetDebugUnitBlockMask', None, None),
  func(False, 'JLINKARM_SetEndian', None, None),
  func(False, 'JLINKARM_SetErrorOutHandler', None, None),
  func(False, 'JLINKARM_SetFlashArea', None, None),
  func(False, 'JLINKARM_SetInitRegsOnReset', None, None),
  func(False, 'JLINKARM_SetLogFile', None, None),
  func(False, 'JLINKARM_SetMaxSpeed', None, None),
  func(False, 'JLINKARM_SetRESET', None, None),
  func(False, 'JLINKARM_SetResetDelay', None, None),
  func(False, 'JLINKARM_SetResetPara', None, None),
  func(False, 'JLINKARM_SetResetType', None, None),
  func(False, 'JLINKARM_SetSpeed', None, None),
  func(False, 'JLINKARM_SetTCK', None, None),
  func(False, 'JLINKARM_SetTDI', None, None),
  func(False, 'JLINKARM_SetTMS', None, None),
  func(False, 'JLINKARM_SetTRST', None, None),
  func(False, 'JLINKARM_SetWaitFunction', None, None),
  func(False, 'JLINKARM_SetWarnOutHandler', None, None),
  func(False, 'JLINKARM_SetWP', None, None),
  func(False, 'JLINKARM_SimulateInstruction', None, None),
  func(False, 'JLINKARM_Step', None, None),
  func(False, 'JLINKARM_StepComposite', None, None),
  func(False, 'JLINKARM_StoreBits', None, None),
  func(False, 'JLINKARM_StoreCmd', None, None),
  func(False, 'JLINKARM_StoreData', None, None),
  func(False, 'JLINKARM_SWD_DisableSWCLK', None, None),
  func(False, 'JLINKARM_SWD_EnableSWCLK', None, None),
  func(False, 'JLINKARM_SWD_SetDirIn', None, None),
  func(False, 'JLINKARM_SWD_SetDirOut', None, None),
  func(False, 'JLINKARM_SWO_Control', None, None),
  func(False, 'JLINKARM_SWO_DisableTarget', None, None),
  func(False, 'JLINKARM_SWO_EnableTarget', None, None),
  func(False, 'JLINKARM_SWO_GetCompatibleSpeeds', None, None),
  func(False, 'JLINKARM_SWO_Read', None, None),
  func(False, 'JLINKARM_SWO_ReadStimulus', None, None),
  func(False, 'JLINKARM_Test', None, None),
  func(False, 'JLINKARM_TIF_GetAvailable', None, None),
  func(False, 'JLINKARM_TIF_Select', None, None),
  func(False, 'JLINKARM_TRACE_AddInst', None, None),
  func(False, 'JLINKARM_TRACE_AddItems', None, None),
  func(False, 'JLINKARM_TRACE_Control', None, None),
  func(False, 'JLINKARM_TRACE_Read', None, None),
  func(False, 'JLINKARM_Unlock', None, None),
  func(False, 'JLINKARM_UpdateFirmware', None, None),
  func(False, 'JLINKARM_UpdateFirmwareIfNewer', None, None),
  func(False, 'JLINKARM_UpdateReplaceFirmware', None, None),
  func(False, 'JLINKARM_WA_AddRange', None, None),
  func(False, 'JLINKARM_WaitDCCRead', None, None),
  func(False, 'JLINKARM_WaitForHalt', None, None),
  func(False, 'JLINKARM_WA_Restore', None, None),
  func(False, 'JLINKARM_WriteBits', None, None),
  func(False, 'JLINKARM_WriteConfigReg', None, None),
  func(False, 'JLINKARM_WriteControlReg', None, None),
  func(False, 'JLINKARM_WriteDCC', None, None),
  func(False, 'JLINKARM_WriteDCCFast', None, None),
  func(False, 'JLINKARM_WriteDebugPort', None, None),
  func(False, 'JLINKARM_WriteDebugReg', None, None),
  func(False, 'JLINKARM_WriteEmu', None, None),
  func(False, 'JLINKARM_WriteEmuConfigMem', None, None),
  func(False, 'JLINKARM_WriteICEReg', None, None),
  func(False, 'JLINKARM_WriteMem', None, None),
  func(False, 'JLINKARM_WriteMemDelayed', None, None),
  func(False, 'JLINKARM_WriteMemEx', None, None),
  func(False, 'JLINKARM_WriteMemHW', None, None),
  func(False, 'JLINKARM_WriteMemMultiple', None, None),
  func(False, 'JLINKARM_WriteReg', None, None),
  func(False, 'JLINKARM_WriteRegs', None, None),
  func(False, 'JLINKARM_WriteU16', None, None),
  func(False, 'JLINKARM_WriteU32', None, None),
  func(False, 'JLINKARM_WriteU64', None, None),
  func(False, 'JLINKARM_WriteU8', None, None),
  func(False, 'JLINKARM_WriteVectorCatch', None, None),
  func(False, 'JLINKARM_WriteVerifyMem', None, None),
  func(False, 'JLINK_BeginDownload', None, None),
  func(False, 'JLINK_Clock', None, None),
  func(False, 'JLINK_Close', None, None),
  func(False, 'JLINK_ClrBP', None, None),
  func(False, 'JLINK_ClrBPEx', None, None),
  func(False, 'JLINK_ClrDataEvent', None, None),
  func(False, 'JLINK_ClrError', None, None),
  func(False, 'JLINK_ClrExecTime', None, None),
  func(False, 'JLINK_ClrRESET', None, None),
  func(False, 'JLINK_ClrTCK', None, None),
  func(False, 'JLINK_ClrTDI', None, None),
  func(False, 'JLINK_ClrTMS', None, None),
  func(False, 'JLINK_ClrTRST', None, None),
  func(False, 'JLINK_ClrWP', None, None),
  func(False, 'JLINK_Communicate', None, None),
  func(False, 'JLINK_ConfigJTAG', None, None),
  func(False, 'JLINK_Configure', None, None),
  func(False, 'JLINK_Connect', None, None),
  func(False, 'JLINK_CORE_GetFound', None, None),
  func(False, 'JLINK_CORE_Select', None, None),
  func(False, 'JLINK_CORESIGHT_Configure', None, None),
  func(False, 'JLINK_CORESIGHT_ReadAPDPReg', None, None),
  func(False, 'JLINK_CORESIGHT_WriteAPDPReg', None, None),
  func(False, 'JLINK_CP15_IsPresent', None, None),
  func(False, 'JLINK_CP15_ReadEx', None, None),
  func(False, 'JLINK_CP15_ReadReg', None, None),
  func(False, 'JLINK_CP15_WriteEx', None, None),
  func(False, 'JLINK_CP15_WriteReg', None, None),
  func(False, 'JLINK_DEVICE_GetInfo', None, None),
  func(False, 'JLINK_DIALOG_Configure', None, None),
  func(False, 'JLINK_DIALOG_ConfigureEx', None, None),
  func(False, 'JLINK_DownloadECode', None, None),
  func(False, 'JLINK_DownloadFile', None, None),
  func(False, 'JLINK_EMU_AddLicense', None, None),
  func(False, 'JLINK_EMU_COM_IsSupported', None, None),
  func(False, 'JLINK_EMU_COM_Read', None, None),
  func(False, 'JLINK_EMU_COM_Write', None, None),
  func(False, 'JLINK_EMU_EraseLicenses', None, None),
  func(False, 'JLINK_EMU_FILE_Delete', None, None),
  func(False, 'JLINK_EMU_FILE_GetList', None, None),
  func(False, 'JLINK_EMU_FILE_GetSize', None, None),
  func(False, 'JLINK_EMU_FILE_Read', None, None),
  func(False, 'JLINK_EMU_FILE_Write', None, None),
  func(False, 'JLINK_EMU_GetCounters', None, None),
  func(False, 'JLINK_EMU_GetDeviceInfo', None, None),
  func(False, 'JLINK_EMU_GetLicenses', None, None),
  func(False, 'JLINK_EMU_GetList', None, None),
  func(False, 'JLINK_EMU_GetMaxMemBlock', None, None),
  func(False, 'JLINK_EMU_GetNumConnections', None, None),
  func(False, 'JLINK_EMU_GetNumDevices', None, None),
  func(False, 'JLINK_EMU_GetProductId', None, None),
  func(False, 'JLINK_EMU_GetProductName', None, None),
  func(False, 'JLINK_EMU_GPIO_GetProps', None, None),
  func(False, 'JLINK_EMU_GPIO_GetState', None, None),
  func(False, 'JLINK_EMU_GPIO_SetState', None, None),
  func(False, 'JLINK_EMU_HasCapEx', None, None),
  func(False, 'JLINK_EMU_HasCPUCap', None, None),
  func(False, 'JLINK_EMU_IsConnected', None, None),
  func(False, 'JLINK_EMU_SelectByIndex', None, None),
  func(False, 'JLINK_EMU_SelectByUSBSN', None, None),
  func(False, 'JLINK_EMU_SelectIP', None, None),
  func(False, 'JLINK_EMU_SelectIPBySN', None, None),
  func(False, 'JLINK_EMU_TestNRSpeed', None, None),
  func(False, 'JLINK_EMU_TestNWSpeed', None, None),
  func(False, 'JLINK_EnableCheckModeAfterWrite', None, None),
  func(False, 'JLINK_EnableFlashCache', None, None),
  func(False, 'JLINK_EnableLog', None, None),
  func(False, 'JLINK_EnableLogCom', None, None),
  func(False, 'JLINK_EnablePerformanceCnt', None, None),
  func(False, 'JLINK_EnableSoftBPs', None, None),
  func(False, 'JLINK_EndDownload', None, None),
  func(False, 'JLINK_EraseChip', None, None),
  func(False, 'JLINK_ETB_IsPresent', None, None),
  func(False, 'JLINK_ETB_ReadReg', None, None),
  func(False, 'JLINK_ETB_WriteReg', None, None),
  func(False, 'JLINK_ETM_IsPresent', None, None),
  func(False, 'JLINK_ETM_ReadReg', None, None),
  func(False, 'JLINK_ETM_StartTrace', None, None),
  func(False, 'JLINK_ETM_WriteReg', None, None),
  func(False, 'JLINK_ExecCommand', None, None),
  func(False, 'JLINK_ExecECode', None, None),
  func(False, 'JLINK_FindBP', None, None),
  func(False, 'JLINK_GetAvailableLicense', None, None),
  func(False, 'JLINK_GetBPInfoEx', None, None),
  func(False, 'JLINK_GetCompileDateTime', None, None),
  func(False, 'JLINK_GetConfigData', None, None),
  func(False, 'JLINK_GetDebugInfo', None, None),
  func(False, 'JLINK_GetDeviceFamily', None, None),
  func(True, 'JLINK_GetDLLVersion', type_char_ptr(), [type_void(),]),
  func(False, 'JLINK_GetEmbeddedFWString', None, None),
  func(False, 'JLINK_GetEmbeddedFWVersion', None, None),
  func(False, 'JLINK_GetEmuCaps', None, None),
  func(False, 'JLINK_GetEmuCapsEx', None, None),
  func(False, 'JLINK_GetExecTime', None, None),
  func(False, 'JLINK_GetFeatureString', None, None),
  func(False, 'JLINK_GetFirmwareString', None, None),
  func(False, 'JLINK_GetHardwareVersion', None, None),
  func(False, 'JLINK_GetHWInfo', None, None),
  func(False, 'JLINK_GetHWStatus', None, None),
  func(False, 'JLINK_GetId', None, None),
  func(False, 'JLINK_GetIdData', None, None),
  func(False, 'JLINK_GetIRLen', None, None),
  func(False, 'JLINK_GetMemZones', None, None),
  func(False, 'JLINK_GetMOEs', None, None),
  func(False, 'JLINK_GetNumBPs', None, None),
  func(False, 'JLINK_GetNumBPUnits', None, None),
  func(False, 'JLINK_GetNumWPs', None, None),
  func(False, 'JLINK_GetNumWPUnits', None, None),
  func(False, 'JLINK_GetOEMString', None, None),
  func(False, 'JLINK_GetPCode', None, None),
  func(False, 'JLINK_GetPerformanceCnt', None, None),
  func(False, 'JLINK_GetpFunc', None, None),
  func(False, 'JLINK_GetpSharedMem', None, None),
  func(False, 'JLINK_GetRegisterList', None, None),
  func(False, 'JLINK_GetRegisterName', None, None),
  func(False, 'JLINK_GetResetTypeDesc', None, None),
  func(False, 'JLINK_GetScanLen', None, None),
  func(False, 'JLINK_GetSelDevice', None, None),
  func(False, 'JLINK_GetSN', None, None),
  func(False, 'JLINK_GetSpeed', None, None),
  func(False, 'JLINK_GetSpeedInfo', None, None),
  func(False, 'JLINK_GetU32', None, None),
  func(False, 'JLINK_GetWPInfoEx', None, None),
  func(False, 'JLINK_Go', None, None),
  func(False, 'JLINK_GoAllowSim', None, None),
  func(False, 'JLINK_GoEx', None, None),
  func(False, 'JLINK_GoHalt', None, None),
  func(False, 'JLINK_GoIntDis', None, None),
  func(False, 'JLINK_Halt', None, None),
  func(False, 'JLINK_HasError', None, None),
  func(False, 'JLINK_HSS_GetCaps', None, None),
  func(False, 'JLINK_HSS_Read', None, None),
  func(False, 'JLINK_HSS_Start', None, None),
  func(False, 'JLINK_HSS_Stop', None, None),
  func(False, 'JLINK_INDICATORS_SetState', None, None),
  func(False, 'JLINK_IsConnected', None, None),
  func(False, 'JLINK_IsHalted', None, None),
  func(False, 'JLINK_IsOpen', None, None),
  func(False, 'JLINK_JTAG_ConfigDevices', None, None),
  func(False, 'JLINK_JTAG_DisableIF', None, None),
  func(False, 'JLINK_JTAG_EnableIF', None, None),
  func(False, 'JLINK_JTAG_GetData', None, None),
  func(False, 'JLINK_JTAG_GetDeviceId', None, None),
  func(False, 'JLINK_JTAG_GetDeviceInfo', None, None),
  func(False, 'JLINK_JTAG_GetU16', None, None),
  func(False, 'JLINK_JTAG_GetU32', None, None),
  func(False, 'JLINK_JTAG_GetU8', None, None),
  func(False, 'JLINK_JTAG_StoreData', None, None),
  func(False, 'JLINK_JTAG_StoreGetData', None, None),
  func(False, 'JLINK_JTAG_StoreGetRaw', None, None),
  func(False, 'JLINK_JTAG_StoreInst', None, None),
  func(False, 'JLINK_JTAG_StoreRaw', None, None),
  func(False, 'JLINK_JTAG_SyncBits', None, None),
  func(False, 'JLINK_JTAG_SyncBytes', None, None),
  func(False, 'JLINK_JTAG_WriteData', None, None),
  func(False, 'JLINK_Lock', None, None),
  func(False, 'JLINK_MeasureCPUSpeed', None, None),
  func(False, 'JLINK_MeasureCPUSpeedEx', None, None),
  func(False, 'JLINK_MeasureRTCKReactTime', None, None),
  func(False, 'JLINK_MeasureSCLen', None, None),
  func(False, 'JLINK_NET_Close', None, None),
  func(False, 'JLINK_NET_Open', None, None),
  func(False, 'JLINK_Open', None, None),
  func(False, 'JLINK_OpenEx', None, None),
  func(False, 'JLINK_PCODE_Exec', None, None),
  func(False, 'JLINK_PCODE_GetCaps', None, None),
  func(False, 'JLINK_PCODE_GetS32Version', None, None),
  func(False, 'JLINK_POWERTRACE_Control', None, None),
  func(False, 'JLINK_POWERTRACE_Read', None, None),
  func(False, 'JLINK_PrintConfig', None, None),
  func(False, 'JLINK_RAWTRACE_Control', None, None),
  func(False, 'JLINK_RAWTRACE_Read', None, None),
  func(False, 'JLINK_ReadCodeMem', None, None),
  func(False, 'JLINK_ReadConfigReg', None, None),
  func(False, 'JLINK_ReadControlReg', None, None),
  func(False, 'JLINK_ReadDCC', None, None),
  func(False, 'JLINK_ReadDCCFast', None, None),
  func(False, 'JLINK_ReadDebugPort', None, None),
  func(False, 'JLINK_ReadDebugReg', None, None),
  func(False, 'JLINK_ReadEmu', None, None),
  func(False, 'JLINK_ReadEmuConfigMem', None, None),
  func(False, 'JLINK_ReadICEReg', None, None),
  func(False, 'JLINK_ReadMem', None, None),
  func(False, 'JLINK_ReadMemEx', None, None),
  func(False, 'JLINK_ReadMemHW', None, None),
  func(False, 'JLINK_ReadMemIndirect', None, None),
  func(False, 'JLINK_ReadMemU16', None, None),
  func(False, 'JLINK_ReadMemU32', None, None),
  func(False, 'JLINK_ReadMemU64', None, None),
  func(False, 'JLINK_ReadMemU8', None, None),
  func(False, 'JLINK_ReadMemZonedEx', None, None),
  func(False, 'JLINK_ReadReg', None, None),
  func(False, 'JLINK_ReadRegs', None, None),
  func(False, 'JLINK_ReadTerminal', None, None),
  func(False, 'JLINK_Reset', None, None),
  func(False, 'JLINK_ResetNoHalt', None, None),
  func(False, 'JLINK_ResetPullsRESET', None, None),
  func(False, 'JLINK_ResetPullsTRST', None, None),
  func(False, 'JLINK_ResetTRST', None, None),
  func(False, 'JLINK_RTTERMINAL_Control', None, None),
  func(False, 'JLINK_RTTERMINAL_Read', None, None),
  func(False, 'JLINK_RTTERMINAL_Write', None, None),
  func(False, 'JLINK_SelDevice', None, None),
  func(False, 'JLINK_SelectDeviceFamily', None, None),
  func(False, 'JLINK_SelectIP', None, None),
  func(False, 'JLINK_SelectTraceSource', None, None),
  func(False, 'JLINK_SelectUSB', None, None),
  func(False, 'JLINK_SetBP', None, None),
  func(False, 'JLINK_SetBPEx', None, None),
  func(False, 'JLINK_SetDataEvent', None, None),
  func(False, 'JLINK_SetDebugUnitBlockMask', None, None),
  func(False, 'JLINK_SetEndian', None, None),
  func(False, 'JLINK_SetErrorOutHandler', None, None),
  func(False, 'JLINK_SetFlashArea', None, None),
  func(False, 'JLINK_SetFlashProgProgressCallback', None, None),
  func(False, 'JLINK_SetHookUnsecureDialog', None, None),
  func(False, 'JLINK_SetInitRegsOnReset', None, None),
  func(False, 'JLINK_SetLogFile', None, None),
  func(False, 'JLINK_SetMaxSpeed', None, None),
  func(False, 'JLINK_SetRESET', None, None),
  func(False, 'JLINK_SetResetDelay', None, None),
  func(False, 'JLINK_SetResetPara', None, None),
  func(False, 'JLINK_SetResetType', None, None),
  func(False, 'JLINK_SetSpeed', None, None),
  func(False, 'JLINK_SetTCK', None, None),
  func(False, 'JLINK_SetTDI', None, None),
  func(False, 'JLINK_SetTMS', None, None),
  func(False, 'JLINK_SetTRST', None, None),
  func(False, 'JLINK_SetWaitFunction', None, None),
  func(False, 'JLINK_SetWarnOutHandler', None, None),
  func(False, 'JLINK_SetWP', None, None),
  func(False, 'JLINK_SimulateInstruction', None, None),
  func(False, 'JLINK_SPI_Transfer', None, None),
  func(False, 'JLINK_Step', None, None),
  func(False, 'JLINK_StepComposite', None, None),
  func(False, 'JLINK_StoreBits', None, None),
  func(False, 'JLINK_StoreCmd', None, None),
  func(False, 'JLINK_STRACE_Config', None, None),
  func(False, 'JLINK_STRACE_Control', None, None),
  func(False, 'JLINK_STRACE_Read', None, None),
  func(False, 'JLINK_STRACE_Start', None, None),
  func(False, 'JLINK_STRACE_Stop', None, None),
  func(False, 'JLINK_SWD_DisableSWCLK', None, None),
  func(False, 'JLINK_SWD_EnableSWCLK', None, None),
  func(False, 'JLINK_SWD_GetData', None, None),
  func(False, 'JLINK_SWD_GetU16', None, None),
  func(False, 'JLINK_SWD_GetU32', None, None),
  func(False, 'JLINK_SWD_GetU8', None, None),
  func(False, 'JLINK_SWD_SetDirIn', None, None),
  func(False, 'JLINK_SWD_SetDirOut', None, None),
  func(False, 'JLINK_SWD_StoreGetRaw', None, None),
  func(False, 'JLINK_SWD_StoreRaw', None, None),
  func(False, 'JLINK_SWD_SyncBits', None, None),
  func(False, 'JLINK_SWD_SyncBytes', None, None),
  func(False, 'JLINK_SWO_Control', None, None),
  func(False, 'JLINK_SWO_Read', None, None),
  func(False, 'JLINK_Test', None, None),
  func(False, 'JLINK_TIF_GetAvailable', None, None),
  func(False, 'JLINK_TIF_Select', None, None),
  func(False, 'JLINK_TRACE_AddInst', None, None),
  func(False, 'JLINK_TRACE_AddItems', None, None),
  func(False, 'JLINK_TRACE_Control', None, None),
  func(False, 'JLINK_TRACE_Read', None, None),
  func(False, 'JLINK_Unlock', None, None),
  func(False, 'JLINK_UpdateFirmware', None, None),
  func(False, 'JLINK_UpdateFirmwareIfNewer', None, None),
  func(False, 'JLINK_UpdateReplaceFirmware', None, None),
  func(False, 'JLINK_WA_AddRange', None, None),
  func(False, 'JLINK_WaitDCCRead', None, None),
  func(False, 'JLINK_WaitForHalt', None, None),
  func(False, 'JLINK_WA_Restore', None, None),
  func(False, 'JLINK_WriteBits', None, None),
  func(False, 'JLINK_WriteConfigReg', None, None),
  func(False, 'JLINK_WriteControlReg', None, None),
  func(False, 'JLINK_WriteDCC', None, None),
  func(False, 'JLINK_WriteDCCFast', None, None),
  func(False, 'JLINK_WriteDebugPort', None, None),
  func(False, 'JLINK_WriteDebugReg', None, None),
  func(False, 'JLINK_WriteEmu', None, None),
  func(False, 'JLINK_WriteEmuConfigMem', None, None),
  func(False, 'JLINK_WriteICEReg', None, None),
  func(False, 'JLINK_WriteMem', None, None),
  func(False, 'JLINK_WriteMemDelayed', None, None),
  func(False, 'JLINK_WriteMemEx', None, None),
  func(False, 'JLINK_WriteMemHW', None, None),
  func(False, 'JLINK_WriteMemZonedEx', None, None),
  func(False, 'JLINK_WriteReg', None, None),
  func(False, 'JLINK_WriteRegs', None, None),
  func(False, 'JLINK_WriteU16', None, None),
  func(False, 'JLINK_WriteU32', None, None),
  func(False, 'JLINK_WriteU64', None, None),
  func(False, 'JLINK_WriteU8', None, None),
  func(False, 'JLINK_WriteVectorCatch', None, None),
  func(False, 'JLINK_WriteVerifyMem', None, None),
]

names = [
  'JLINK_AddMirrorArea',
  'JLINK_AddMirrorAreaEx',
  'JLINKARM_AddMirrorArea',
  'JLINKARM_AddMirrorAreaEx',
  'JLINKARM_BeginDownload',
  'JLINKARM_BMI_Get',
  'JLINKARM_BMI_Set',
  'JLINKARM_CDC_Read',
  'JLINKARM_CDC_SetBaudrate',
  'JLINKARM_CDC_SetHookFuncs',
  'JLINKARM_CDC_SetRTSState',
  'JLINKARM_CDC_SetTimeoutLastCDCRead',
  'JLINKARM_CDC_Write',
  'JLINKARM_Clock',
  'JLINKARM_Close',
  'JLINKARM_ClrBP',
  'JLINKARM_ClrBPEx',
  'JLINKARM_ClrDataEvent',
  'JLINKARM_ClrError',
  'JLINKARM_ClrExecTime',
  'JLINKARM_ClrRESET',
  'JLINKARM_ClrTCK',
  'JLINKARM_ClrTDI',
  'JLINKARM_ClrTMS',
  'JLINKARM_ClrTRST',
  'JLINKARM_ClrWP',
  'JLINKARM_Communicate',
  'JLINKARM_CommunicateEx',
  'JLINKARM_ConfigJTAG',
  'JLINKARM_Connect',
  'JLINKARM_Core2CoreName',
  'JLINKARM_CORE_GetFound',
  'JLINKARM_CORE_Select',
  'JLINKARM_CORESIGHT_Configure',
  'JLINKARM_CORESIGHT_ReadAPDPReg',
  'JLINKARM_CORESIGHT_WriteAPDPReg',
  'JLINKARM_CP15_IsPresent',
  'JLINKARM_CP15_ReadEx',
  'JLINKARM_CP15_ReadReg',
  'JLINKARM_CP15_WriteEx',
  'JLINKARM_CP15_WriteReg',
  'JLINKARM_DEVICE_GetIndex',
  'JLINKARM_DEVICE_GetInfo',
  'JLINKARM_DEVICE_SelectDialog',
  'JLINKARM_DisassembleInst',
  'JLINKARM_DisassembleInstEx',
  'JLINKARM_DownloadECode',
  'JLINKARM_EMU_COM_IsSupported',
  'JLINKARM_EMU_COM_Read',
  'JLINKARM_EMU_COM_Write',
  'JLINKARM_EMU_FILE_Delete',
  'JLINKARM_EMU_FILE_GetList',
  'JLINKARM_EMU_FILE_GetSize',
  'JLINKARM_EMU_FILE_Read',
  'JLINKARM_EMU_FILE_Write',
  'JLINKARM_EMU_GetCounters',
  'JLINKARM_EMU_GetDeviceInfo',
  'JLINKARM_EMU_GetList',
  'JLINKARM_EMU_GetMaxMemBlock',
  'JLINKARM_EMU_GetNumConnections',
  'JLINKARM_EMU_GetNumDevices',
  'JLINKARM_EMU_GetProductId',
  'JLINKARM_EMU_GetProductName',
  'JLINKARM_EMU_HasCapEx',
  'JLINKARM_EMU_HasCPUCap',
  'JLINKARM_EMU_IsConnected',
  'JLINKARM_EMU_SelectByIndex',
  'JLINKARM_EMU_SelectByUSBSN',
  'JLINKARM_EMU_SelectIP',
  'JLINKARM_EMU_SelectIPBySN',
  'JLINKARM_EMU_TestNRSpeed',
  'JLINKARM_EMU_TestNWSpeed',
  'JLINKARM_EnableCheckModeAfterWrite',
  'JLINKARM_EnableFlashCache',
  'JLINKARM_EnableLog',
  'JLINKARM_EnableLogCom',
  'JLINKARM_EnablePerformanceCnt',
  'JLINKARM_EnableSoftBPs',
  'JLINKARM_EndDownload',
  'JLINKARM_ETB_IsPresent',
  'JLINKARM_ETB_ReadReg',
  'JLINKARM_ETB_WriteReg',
  'JLINKARM_ETM_IsPresent',
  'JLINKARM_ETM_ReadReg',
  'JLINKARM_ETM_StartTrace',
  'JLINKARM_ETM_WriteReg',
  'JLINKARM_ExecCommand',
  'JLINKARM_ExecECode',
  'JLINKARM_FindBP',
  'JLINKARM_FreeMem',
  'JLINKARM_GetBPInfo',
  'JLINKARM_GetBPInfoEx',
  'JLINKARM_GetCompileDateTime',
  'JLINKARM_GetConfigData',
  'JLINKARM_GetDebugInfo',
  'JLINKARM_GetDeviceFamily',
  'JLINKARM_GetDeviceId',
  'JLINKARM_GetDLLVersion',
  'JLINKARM_GetEmbeddedFWString',
  'JLINKARM_GetEmbeddedFWVersion',
  'JLINKARM_GetEmuCaps',
  'JLINKARM_GetEmuCapsEx',
  'JLINKARM_GetExecTime',
  'JLINKARM_GetFeatureString',
  'JLINKARM_GetFirmwareString',
  'JLINKARM_GetHardwareVersion',
  'JLINKARM_GetHWInfo',
  'JLINKARM_GetHWStatus',
  'JLINKARM_GetId',
  'JLINKARM_GetIdData',
  'JLINKARM_GetIRLen',
  'JLINKARM_GetMOEs',
  'JLINKARM_GetNumBPs',
  'JLINKARM_GetNumBPUnits',
  'JLINKARM_GetNumWPs',
  'JLINKARM_GetNumWPUnits',
  'JLINKARM_GetOEMString',
  'JLINKARM_GetPerformanceCnt',
  'JLINKARM_GetpSharedMem',
  'JLINKARM_GetRegisterList',
  'JLINKARM_GetRegisterName',
  'JLINKARM_GetResetTypeDesc',
  'JLINKARM_GetScanLen',
  'JLINKARM_GetSelDevice',
  'JLINKARM_GetSN',
  'JLINKARM_GetSpeed',
  'JLINKARM_GetSpeedInfo',
  'JLINKARM_GetU32',
  'JLINKARM_GetWPInfoEx',
  'JLINKARM_Go',
  'JLINKARM_GoAllowSim',
  'JLINKARM_GoEx',
  'JLINKARM_GoHalt',
  'JLINKARM_GoIntDis',
  'JLINKARM_Halt',
  'JLINKARM_HasError',
  'JLINKARM_INDICATORS_SetState',
  'JLINKARM_IsConnected',
  'JLINKARM_IsHalted',
  'JLINKARM_IsOpen',
  'JLINKARM_JTAG_ConfigDevices',
  'JLINKARM_JTAG_DisableIF',
  'JLINKARM_JTAG_EnableIF',
  'JLINKARM_JTAG_GetData',
  'JLINKARM_JTAG_GetDeviceId',
  'JLINKARM_JTAG_GetDeviceInfo',
  'JLINKARM_JTAG_GetU16',
  'JLINKARM_JTAG_GetU32',
  'JLINKARM_JTAG_GetU8',
  'JLINKARM_JTAG_StoreData',
  'JLINKARM_JTAG_StoreGetData',
  'JLINKARM_JTAG_StoreGetRaw',
  'JLINKARM_JTAG_StoreInst',
  'JLINKARM_JTAG_StoreRaw',
  'JLINKARM_JTAG_SyncBits',
  'JLINKARM_JTAG_SyncBytes',
  'JLINKARM_JTAG_WriteData',
  'JLINKARM_Lock',
  'JLINKARM_MeasureCPUSpeed',
  'JLINKARM_MeasureCPUSpeedEx',
  'JLINKARM_MeasureRTCKReactTime',
  'JLINKARM_MeasureSCLen',
  'JLINKARM_NET_Close',
  'JLINKARM_NET_Open',
  'JLINKARM_Open',
  'JLINKARM_OpenEx',
  'JLINKARM_PCODE_Assemble',
  'JLINKARM_PCODE_Exec',
  'JLINKARM_PCODE_GetCaps',
  'JLINKARM_PCODE_GetDebugAPI',
  'JLINKARM_PCODE_GetS32Version',
  'JLINKARM_PERIODIC_ConfReadMem',
  'JLINKARM_PERIODIC_Control',
  'JLINKARM_PERIODIC_Read',
  'JLINKARM_RAWTRACE_Control',
  'JLINKARM_RAWTRACE_Read',
  'JLINKARM_ReadCodeMem',
  'JLINKARM_ReadConfigReg',
  'JLINKARM_ReadControlReg',
  'JLINKARM_ReadDCC',
  'JLINKARM_ReadDCCFast',
  'JLINKARM_ReadDebugPort',
  'JLINKARM_ReadDebugReg',
  'JLINKARM_ReadEmu',
  'JLINKARM_ReadEmuConfigMem',
  'JLINKARM_ReadICEReg',
  'JLINKARM_ReadMem',
  'JLINKARM_ReadMemEx',
  'JLINKARM_ReadMemHW',
  'JLINKARM_ReadMemIndirect',
  'JLINKARM_ReadMemU16',
  'JLINKARM_ReadMemU32',
  'JLINKARM_ReadMemU64',
  'JLINKARM_ReadMemU8',
  'JLINKARM_ReadReg',
  'JLINKARM_ReadRegs',
  'JLINKARM_ReadTerminal',
  'JLINKARM_Reset',
  'JLINKARM_ResetNoHalt',
  'JLINKARM_ResetPullsRESET',
  'JLINKARM_ResetPullsTRST',
  'JLINKARM_ResetTRST',
  'JLINKARM_SelDevice',
  'JLINKARM_SelectDeviceFamily',
  'JLINKARM_SelectIP',
  'JLINKARM_SelectTraceSource',
  'JLINKARM_SelectUSB',
  'JLINKARM_SetBP',
  'JLINKARM_SetBPEx',
  'JLINKARM_SetCoreIndex',
  'JLINKARM_SetDataEvent',
  'JLINKARM_SetDebugUnitBlockMask',
  'JLINKARM_SetEndian',
  'JLINKARM_SetErrorOutHandler',
  'JLINKARM_SetFlashArea',
  'JLINKARM_SetInitRegsOnReset',
  'JLINKARM_SetLogFile',
  'JLINKARM_SetMaxSpeed',
  'JLINKARM_SetRESET',
  'JLINKARM_SetResetDelay',
  'JLINKARM_SetResetPara',
  'JLINKARM_SetResetType',
  'JLINKARM_SetSpeed',
  'JLINKARM_SetTCK',
  'JLINKARM_SetTDI',
  'JLINKARM_SetTMS',
  'JLINKARM_SetTRST',
  'JLINKARM_SetWaitFunction',
  'JLINKARM_SetWarnOutHandler',
  'JLINKARM_SetWP',
  'JLINKARM_SimulateInstruction',
  'JLINKARM_Step',
  'JLINKARM_StepComposite',
  'JLINKARM_StoreBits',
  'JLINKARM_StoreCmd',
  'JLINKARM_StoreData',
  'JLINKARM_SWD_DisableSWCLK',
  'JLINKARM_SWD_EnableSWCLK',
  'JLINKARM_SWD_SetDirIn',
  'JLINKARM_SWD_SetDirOut',
  'JLINKARM_SWO_Control',
  'JLINKARM_SWO_DisableTarget',
  'JLINKARM_SWO_EnableTarget',
  'JLINKARM_SWO_GetCompatibleSpeeds',
  'JLINKARM_SWO_Read',
  'JLINKARM_SWO_ReadStimulus',
  'JLINKARM_Test',
  'JLINKARM_TIF_GetAvailable',
  'JLINKARM_TIF_Select',
  'JLINKARM_TRACE_AddInst',
  'JLINKARM_TRACE_AddItems',
  'JLINKARM_TRACE_Control',
  'JLINKARM_TRACE_Read',
  'JLINKARM_Unlock',
  'JLINKARM_UpdateFirmware',
  'JLINKARM_UpdateFirmwareIfNewer',
  'JLINKARM_UpdateReplaceFirmware',
  'JLINKARM_WA_AddRange',
  'JLINKARM_WaitDCCRead',
  'JLINKARM_WaitForHalt',
  'JLINKARM_WA_Restore',
  'JLINKARM_WriteBits',
  'JLINKARM_WriteConfigReg',
  'JLINKARM_WriteControlReg',
  'JLINKARM_WriteDCC',
  'JLINKARM_WriteDCCFast',
  'JLINKARM_WriteDebugPort',
  'JLINKARM_WriteDebugReg',
  'JLINKARM_WriteEmu',
  'JLINKARM_WriteEmuConfigMem',
  'JLINKARM_WriteICEReg',
  'JLINKARM_WriteMem',
  'JLINKARM_WriteMemDelayed',
  'JLINKARM_WriteMemEx',
  'JLINKARM_WriteMemHW',
  'JLINKARM_WriteMemMultiple',
  'JLINKARM_WriteReg',
  'JLINKARM_WriteRegs',
  'JLINKARM_WriteU16',
  'JLINKARM_WriteU32',
  'JLINKARM_WriteU64',
  'JLINKARM_WriteU8',
  'JLINKARM_WriteVectorCatch',
  'JLINKARM_WriteVerifyMem',
  'JLINK_BeginDownload',
  'JLINK_Clock',
  'JLINK_Close',
  'JLINK_ClrBP',
  'JLINK_ClrBPEx',
  'JLINK_ClrDataEvent',
  'JLINK_ClrError',
  'JLINK_ClrExecTime',
  'JLINK_ClrRESET',
  'JLINK_ClrTCK',
  'JLINK_ClrTDI',
  'JLINK_ClrTMS',
  'JLINK_ClrTRST',
  'JLINK_ClrWP',
  'JLINK_Communicate',
  'JLINK_ConfigJTAG',
  'JLINK_Configure',
  'JLINK_Connect',
  'JLINK_CORE_GetFound',
  'JLINK_CORE_Select',
  'JLINK_CORESIGHT_Configure',
  'JLINK_CORESIGHT_ReadAPDPReg',
  'JLINK_CORESIGHT_WriteAPDPReg',
  'JLINK_CP15_IsPresent',
  'JLINK_CP15_ReadEx',
  'JLINK_CP15_ReadReg',
  'JLINK_CP15_WriteEx',
  'JLINK_CP15_WriteReg',
  'JLINK_DEVICE_GetInfo',
  'JLINK_DIALOG_Configure',
  'JLINK_DIALOG_ConfigureEx',
  'JLINK_DownloadECode',
  'JLINK_DownloadFile',
  'JLINK_EMU_AddLicense',
  'JLINK_EMU_COM_IsSupported',
  'JLINK_EMU_COM_Read',
  'JLINK_EMU_COM_Write',
  'JLINK_EMU_EraseLicenses',
  'JLINK_EMU_FILE_Delete',
  'JLINK_EMU_FILE_GetList',
  'JLINK_EMU_FILE_GetSize',
  'JLINK_EMU_FILE_Read',
  'JLINK_EMU_FILE_Write',
  'JLINK_EMU_GetCounters',
  'JLINK_EMU_GetDeviceInfo',
  'JLINK_EMU_GetLicenses',
  'JLINK_EMU_GetList',
  'JLINK_EMU_GetMaxMemBlock',
  'JLINK_EMU_GetNumConnections',
  'JLINK_EMU_GetNumDevices',
  'JLINK_EMU_GetProductId',
  'JLINK_EMU_GetProductName',
  'JLINK_EMU_GPIO_GetProps',
  'JLINK_EMU_GPIO_GetState',
  'JLINK_EMU_GPIO_SetState',
  'JLINK_EMU_HasCapEx',
  'JLINK_EMU_HasCPUCap',
  'JLINK_EMU_IsConnected',
  'JLINK_EMU_SelectByIndex',
  'JLINK_EMU_SelectByUSBSN',
  'JLINK_EMU_SelectIP',
  'JLINK_EMU_SelectIPBySN',
  'JLINK_EMU_TestNRSpeed',
  'JLINK_EMU_TestNWSpeed',
  'JLINK_EnableCheckModeAfterWrite',
  'JLINK_EnableFlashCache',
  'JLINK_EnableLog',
  'JLINK_EnableLogCom',
  'JLINK_EnablePerformanceCnt',
  'JLINK_EnableSoftBPs',
  'JLINK_EndDownload',
  'JLINK_EraseChip',
  'JLINK_ETB_IsPresent',
  'JLINK_ETB_ReadReg',
  'JLINK_ETB_WriteReg',
  'JLINK_ETM_IsPresent',
  'JLINK_ETM_ReadReg',
  'JLINK_ETM_StartTrace',
  'JLINK_ETM_WriteReg',
  'JLINK_ExecCommand',
  'JLINK_ExecECode',
  'JLINK_FindBP',
  'JLINK_GetAvailableLicense',
  'JLINK_GetBPInfoEx',
  'JLINK_GetCompileDateTime',
  'JLINK_GetConfigData',
  'JLINK_GetDebugInfo',
  'JLINK_GetDeviceFamily',
  'JLINK_GetDLLVersion',
  'JLINK_GetEmbeddedFWString',
  'JLINK_GetEmbeddedFWVersion',
  'JLINK_GetEmuCaps',
  'JLINK_GetEmuCapsEx',
  'JLINK_GetExecTime',
  'JLINK_GetFeatureString',
  'JLINK_GetFirmwareString',
  'JLINK_GetHardwareVersion',
  'JLINK_GetHWInfo',
  'JLINK_GetHWStatus',
  'JLINK_GetId',
  'JLINK_GetIdData',
  'JLINK_GetIRLen',
  'JLINK_GetMemZones',
  'JLINK_GetMOEs',
  'JLINK_GetNumBPs',
  'JLINK_GetNumBPUnits',
  'JLINK_GetNumWPs',
  'JLINK_GetNumWPUnits',
  'JLINK_GetOEMString',
  'JLINK_GetPCode',
  'JLINK_GetPerformanceCnt',
  'JLINK_GetpFunc',
  'JLINK_GetpSharedMem',
  'JLINK_GetRegisterList',
  'JLINK_GetRegisterName',
  'JLINK_GetResetTypeDesc',
  'JLINK_GetScanLen',
  'JLINK_GetSelDevice',
  'JLINK_GetSN',
  'JLINK_GetSpeed',
  'JLINK_GetSpeedInfo',
  'JLINK_GetU32',
  'JLINK_GetWPInfoEx',
  'JLINK_Go',
  'JLINK_GoAllowSim',
  'JLINK_GoEx',
  'JLINK_GoHalt',
  'JLINK_GoIntDis',
  'JLINK_Halt',
  'JLINK_HasError',
  'JLINK_HSS_GetCaps',
  'JLINK_HSS_Read',
  'JLINK_HSS_Start',
  'JLINK_HSS_Stop',
  'JLINK_INDICATORS_SetState',
  'JLINK_IsConnected',
  'JLINK_IsHalted',
  'JLINK_IsOpen',
  'JLINK_JTAG_ConfigDevices',
  'JLINK_JTAG_DisableIF',
  'JLINK_JTAG_EnableIF',
  'JLINK_JTAG_GetData',
  'JLINK_JTAG_GetDeviceId',
  'JLINK_JTAG_GetDeviceInfo',
  'JLINK_JTAG_GetU16',
  'JLINK_JTAG_GetU32',
  'JLINK_JTAG_GetU8',
  'JLINK_JTAG_StoreData',
  'JLINK_JTAG_StoreGetData',
  'JLINK_JTAG_StoreGetRaw',
  'JLINK_JTAG_StoreInst',
  'JLINK_JTAG_StoreRaw',
  'JLINK_JTAG_SyncBits',
  'JLINK_JTAG_SyncBytes',
  'JLINK_JTAG_WriteData',
  'JLINK_Lock',
  'JLINK_MeasureCPUSpeed',
  'JLINK_MeasureCPUSpeedEx',
  'JLINK_MeasureRTCKReactTime',
  'JLINK_MeasureSCLen',
  'JLINK_NET_Close',
  'JLINK_NET_Open',
  'JLINK_Open',
  'JLINK_OpenEx',
  'JLINK_PCODE_Exec',
  'JLINK_PCODE_GetCaps',
  'JLINK_PCODE_GetS32Version',
  'JLINK_POWERTRACE_Control',
  'JLINK_POWERTRACE_Read',
  'JLINK_PrintConfig',
  'JLINK_RAWTRACE_Control',
  'JLINK_RAWTRACE_Read',
  'JLINK_ReadCodeMem',
  'JLINK_ReadConfigReg',
  'JLINK_ReadControlReg',
  'JLINK_ReadDCC',
  'JLINK_ReadDCCFast',
  'JLINK_ReadDebugPort',
  'JLINK_ReadDebugReg',
  'JLINK_ReadEmu',
  'JLINK_ReadEmuConfigMem',
  'JLINK_ReadICEReg',
  'JLINK_ReadMem',
  'JLINK_ReadMemEx',
  'JLINK_ReadMemHW',
  'JLINK_ReadMemIndirect',
  'JLINK_ReadMemU16',
  'JLINK_ReadMemU32',
  'JLINK_ReadMemU64',
  'JLINK_ReadMemU8',
  'JLINK_ReadMemZonedEx',
  'JLINK_ReadReg',
  'JLINK_ReadRegs',
  'JLINK_ReadTerminal',
  'JLINK_Reset',
  'JLINK_ResetNoHalt',
  'JLINK_ResetPullsRESET',
  'JLINK_ResetPullsTRST',
  'JLINK_ResetTRST',
  'JLINK_RTTERMINAL_Control',
  'JLINK_RTTERMINAL_Read',
  'JLINK_RTTERMINAL_Write',
  'JLINK_SelDevice',
  'JLINK_SelectDeviceFamily',
  'JLINK_SelectIP',
  'JLINK_SelectTraceSource',
  'JLINK_SelectUSB',
  'JLINK_SetBP',
  'JLINK_SetBPEx',
  'JLINK_SetDataEvent',
  'JLINK_SetDebugUnitBlockMask',
  'JLINK_SetEndian',
  'JLINK_SetErrorOutHandler',
  'JLINK_SetFlashArea',
  'JLINK_SetFlashProgProgressCallback',
  'JLINK_SetHookUnsecureDialog',
  'JLINK_SetInitRegsOnReset',
  'JLINK_SetLogFile',
  'JLINK_SetMaxSpeed',
  'JLINK_SetRESET',
  'JLINK_SetResetDelay',
  'JLINK_SetResetPara',
  'JLINK_SetResetType',
  'JLINK_SetSpeed',
  'JLINK_SetTCK',
  'JLINK_SetTDI',
  'JLINK_SetTMS',
  'JLINK_SetTRST',
  'JLINK_SetWaitFunction',
  'JLINK_SetWarnOutHandler',
  'JLINK_SetWP',
  'JLINK_SimulateInstruction',
  'JLINK_SPI_Transfer',
  'JLINK_Step',
  'JLINK_StepComposite',
  'JLINK_StoreBits',
  'JLINK_StoreCmd',
  'JLINK_STRACE_Config',
  'JLINK_STRACE_Control',
  'JLINK_STRACE_Read',
  'JLINK_STRACE_Start',
  'JLINK_STRACE_Stop',
  'JLINK_SWD_DisableSWCLK',
  'JLINK_SWD_EnableSWCLK',
  'JLINK_SWD_GetData',
  'JLINK_SWD_GetU16',
  'JLINK_SWD_GetU32',
  'JLINK_SWD_GetU8',
  'JLINK_SWD_SetDirIn',
  'JLINK_SWD_SetDirOut',
  'JLINK_SWD_StoreGetRaw',
  'JLINK_SWD_StoreRaw',
  'JLINK_SWD_SyncBits',
  'JLINK_SWD_SyncBytes',
  'JLINK_SWO_Control',
  'JLINK_SWO_Read',
  'JLINK_Test',
  'JLINK_TIF_GetAvailable',
  'JLINK_TIF_Select',
  'JLINK_TRACE_AddInst',
  'JLINK_TRACE_AddItems',
  'JLINK_TRACE_Control',
  'JLINK_TRACE_Read',
  'JLINK_Unlock',
  'JLINK_UpdateFirmware',
  'JLINK_UpdateFirmwareIfNewer',
  'JLINK_UpdateReplaceFirmware',
  'JLINK_WA_AddRange',
  'JLINK_WaitDCCRead',
  'JLINK_WaitForHalt',
  'JLINK_WA_Restore',
  'JLINK_WriteBits',
  'JLINK_WriteConfigReg',
  'JLINK_WriteControlReg',
  'JLINK_WriteDCC',
  'JLINK_WriteDCCFast',
  'JLINK_WriteDebugPort',
  'JLINK_WriteDebugReg',
  'JLINK_WriteEmu',
  'JLINK_WriteEmuConfigMem',
  'JLINK_WriteICEReg',
  'JLINK_WriteMem',
  'JLINK_WriteMemDelayed',
  'JLINK_WriteMemEx',
  'JLINK_WriteMemHW',
  'JLINK_WriteMemZonedEx',
  'JLINK_WriteReg',
  'JLINK_WriteRegs',
  'JLINK_WriteU16',
  'JLINK_WriteU32',
  'JLINK_WriteU64',
  'JLINK_WriteU8',
  'JLINK_WriteVectorCatch',
  'JLINK_WriteVerifyMem',
]

def main2():
  for f in names:
    print('  func(False, \'%s\', None, None),' % f)

def emit_include_file(fname, functions):
  s = []
  s.append('#ifndef JLINK_API_H')
  s.append('#define JLINK_API_H')
  for f in functions:
    if f.enable :
      s.append(f.emit_c_proto())
  for f in functions:
    if not f.enable :
      s.append(f.emit_c_proto())
  s.append('#endif // JLINK_API_H')
  ofile = open(fname, 'w')
  ofile.write('\n'.join(s))
  ofile.close()

def main():
  emit_include_file("jlink_api.h", functions)

main()
